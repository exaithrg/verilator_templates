#include <cstdio>
#include <cstdlib>
#include <cassert>
#include "Vtop.h"
#include "verilated.h"
#include "verilated_vcd_c.h"

vluint64_t main_time = 0; //sim time
                        
double sc_time_stamp(){
    return main_time;
}

int main(int argc, char** argv, char** env) {

    int endflag=0;
    int sim_time=20;

    VerilatedContext* contextp = new VerilatedContext;
    contextp->commandArgs(argc, argv);

    Verilated::traceEverOn(true);
    VerilatedVcdC* tfp = new VerilatedVcdC();

    Vtop* top = new Vtop{contextp};
    top->trace(tfp, 0);
    
    tfp->open("obj_dir/wave.vcd");

    while (main_time<20 && !Verilated::gotFinish()){
        int a = rand() & 1;
        int b = rand() & 1;
        top->a = a;
        top->b = b;
        top->eval(); 
        printf("a = %d, b = %d. f = %d\n", a, b, top->f);
        assert(top->f == (a ^ b));
        //assert(top->f != (a ^ b));
        tfp->dump(main_time);
        main_time++;
    }

    printf("Test OK!\n");

    top->final();
    tfp->close();
    delete top;
    delete contextp;
    return 0;
}
